openapi: 3.0.0

info:
  title: APTrust Registry Member API
  description: Open API documentation for version 3 of the APTrust Member API.
  version: '3.0'
  contact:
    email: "help@aptrust.org"
  license:
    name: BSD 2-Clause "Simplified" License
    url: https://raw.githubusercontent.com/APTrust/registry/master/LICENSE

servers:
  - url: http://registry.aptrust.org/member-api/v3
    description: APTrust staging server. Currently not open to members or the public.

components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-Pharos-API-Key
      description: User's secret API key
    apiUser:
      type: apiKey
      in: header
      name: X-Pharos-API-User
      description: User's email address
  schemas:
    AlertView:
      type: object
      properties:
        id:
          type: integer
          format: int64
        institution_id:
          type: integer
          format: int64
        institution_name:
          type: string
        institution_identifier:
          type: string
        type:
          type: string
          description: The type of alert. 
          enum: ["Deletion Cancelled", "Deletion Completed", "Deletion Confirmed", "Deletion Requested", "Failed Fixity Check", "Password Changed", "Password Reset", "Restoration Completed", "Stalled Work Items", "Welcome New User"]
        subject:
          type: string
        content: 
          type: string
          description: The main body of the alert message.
        deletion_request_id:
          type: integer
          format: int64
          nullable: true
          description: The id of the deletion request, if this alert pertains to a deletion request.
        created_at:
          type: string
          format: date-time
          description: Date and time the alert was generated.
        user_id:
          type: integer
          format: int64
          description: The ID of the user to whom the alert was sent.
        user_name:
          type: string
          description: The name of the user to whom the alert was sent.
        sent_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time this alert was sent to the user. This may be null if the system was unable to send the alert.
        read_at:
          type: string
          format: date-time
          nullable: true
          description: Date and time the recipient read this alert. This will be null if the recipient has not yet viewed the alert, or if the recipient manually set the message to 'unread' in the Web UI.
    AlertViewList:
      properties:
        count:
          type: integer
          format: int64
          description: The total number of results matching your query.
        next: 
          type: string
          description: The URL for the next page of results.
        previous: 
          type: string
          description: The URL for the previous page of results.
        items:
          $ref: '#/components/schemas/AlertView'
          description: An array of AlertView objects matching your query.
    ChecksumView:
      properties:
        id:
          type: integer
          format: int64
        algorithm:
          type: string
          enum: ["md5", "sha1", "sha256", "sha512"]
          description: The algorithm used to calculate the digest.
        datetime:
          type: string
          format: date-time
          description: The date and time at which this digest was calculated.
        state:
          type: string
          enum: ["A", "D"]
          description: The state of the GenericFile to which this checksum pertains. A = Active, D = Deleted 
        generic_file_identifier:
          type: string
          description: "The identifier of the GenericFile to which this checksum pertains. GenericFile identifiers follow a semantic format: <instution_identifier>/<bag_name>/<path_in_bag>" 
          example: test.edu/SampleBag/data/document.pdf
        generic_file_id: 
          type: integer
          format: int64
          description: The unique id of the GenericFile to which this checksum pertains.
        intellectual_object_id:
          type: integer
          format: int64
          description: The ID of the GenericFile's parent object.
        institution_id:
          type: integer
          format: int64
          description: The ID of the institution that owns the GenericFile.
        created_at:
          type: string
          format: date-time
          description: The date and time at which the checksum record was created in the database. This will be later than the datetime field because checksums are calculated early in the ingest process and recorded near the end of ingest.
        updated_at:
          type: string
          format: date-time
          description: Since checksums cannot be updated, this should always match the value of created_at.
    ChecksumViewList:
      properties:
        count:
          type: integer
          format: int64
          description: The total number of results matching your query.
        next: 
          type: string
          description: The URL for the next page of results.
        previous: 
          type: string
          description: The URL for the previous page of results.
        items:
          $ref: '#/components/schemas/ChecksumView'
          description: An array of ChecksumView objects matching your query.

    DeletionRequestView:
      properties:
        id: 
          type: integer
          format: int64
        institution_id: 
          type: integer
          format: int64
          description: The ID of the institution that owns the files or objects to which this deletion request pertains.
        institution_name: 
          type: string
          description: The name of the institution that owns the files or objects to which this deletion request pertains.
        institution_identifier: 
          type: string
          description: The identifier (domain name) of the institution that owns the files or objects to which this deletion request pertains.
        requested_by_id: 
          type: integer
          format: int64
          description: The id of the user who requested the deletion.
        requested_by_name: 
          type: string
          description: The name of the user who requested this deletion.
        requested_by_email: 
          type: string
          description: The email address of the user who requested this deletion.
          format: email
        requested_at: 
          type: string
          format: date-time
          description: The date and time at which this deletion was requested.
        confirmed_by_id: 
          type: integer
          format: int64
          description: The id of the user who confirmed (approved) this deletion. This will be null if the deletion has not yet been approved or was cancelled.
          nullable: true
        confirmed_by_name: 
          type: string
          description: The name of the user who confirmed (approved) this deletion.
          nullable: true
        confirmed_by_email: 
          type: string
          description: The email address of the user who confirmed (approved) this deletion.
          format: email
          nullable: true
        confirmed_at: 
          type: string
          format: date-time
          description: The date and time at which this deletion was approved.
          nullable: true
        cancelled_by_id: 
          type: integer
          format: int64
          description: The id of the user who cancelled (rejected) this deletion.
          nullable: true
        cancelled_by_name: 
          type: string
          description: The name of the user who cancelled (rejected) this deletion.
          nullable: true
        cancelled_by_email: 
          type: string
          description: The email address of the user who cancelled (rejected) this deletion.
          format: email
          nullable: true
        cancelled_at: 
          type: string
          format: date-time
          description: The date and time at which this deletion was cancelled (rejected).
          nullable: true
        file_count: 
          type: integer
          format: int64
          description: The total number of files to be deleted in this request. If zero, this is an object deletion request.
          minimum: 0
        object_count: 
          type: integer
          format: int64
          description: The total number of objects to be deleted in this request. If zero, this is a file deletion request.
          minimum: 0
        work_item_id: 
          type: integer
          format: int64
          description: The ID of the WorkItem for this deletion request. The WorkItem will not exist until the deletion request is approved and will never be created if the deletion request is rejected.
          nullable: true
        stage: 
          type: string
          description: The stage of the deletion WorkItem, if it exists. This describes how far along the deletion worker is in the deletion process.
          enum: ["Requested", "Resolve"]
          nullable: true
        status: 
          type: string
          description: The status of the deletion WorkItem, if it exists. This describes whether the deletion operation has started, completed, etc.
          enum: ["Cancelled", "Started", "Pending", "Started", "Success"]
          nullable: true
        date_processed: 
          type: string
          format: date-time
          description: Timestamp of the last activity on this deletion's WorkItem (assuming the deletion was approved).
          nullable: true
        size: 
          type: integer
          format: int64
          description: Total size, in bytes, of items to be deleted. This will be empty if the deletion request was not approved.  
          nullable: true 
        note: 
          type: string
          description: A brief, human-readable summary of the current state of the deletion WorkItem. This will be null if the deletion request was not approved.
          nullable: true


paths:
  /member-api/v3/alerts:
    get:
      summary: Returns a list of alerts for the currently authenticated user. 
      parameters:
        - name: page
          in: query
          description: The page of results to fetch
          required: false
          schema:
            type: integer
            default: 1
            format: int32      
        - name: per_page
          in: query
          description: The number of results to fetch per page.
          required: false
          schema:
            type: integer
            default: 20
            format: int32      
        - name: sort
          in: query
          description: Sort the results in the specified column and direction. The format for this param is column__direction, where column is the column name and direction is either "asc" or "desc".
          required: false
          schema:
            type: string            
            enum: ["created_at__asc", "created_at__desc", "type__asc", "type__desc"]
        - name: created_at__gteq
          in: query
          description: Return alerts created on or after the given timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - name: created_at__lteq
          in: query
          description: Return alerts created on or before the given timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - name: type
          in: query
          description: Return alerts of the specified type.
          required: false
          schema:
            type: string 
            enum: ["Deletion Cancelled", "Deletion Completed", "Deletion Confirmed", "Deletion Requested", "Failed Fixity Check", "Password Changed", "Password Reset", "Restoration Completed", "Stalled Work Items", "Welcome New User"]
      responses:
        '200':
          description: A list of alerts for the currently authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertViewList'
        '401':
          description: Request is not authorized. Be sure you passed valid API credentials with your request.
        '403':
          description: The current user does not have permission to view alerts. You should not see this error if you've authenticated.
  /member-api/v3/alerts/show/{id}/{user_id}:
    get:
      summary: Returns an alert with the specified id for the specified user.
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the alert.
          schema:
            type: integer
            format: int64
            minimum: 1 
        - name: user_id 
          in: path
          required: true
          description: The id of the alert.
          schema:
            type: integer
            format: int64
            minimum: 1 
      responses:
        '200':
          description: An alert object with the requested user_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertView'
        '400':
          description: Bad request. One or more required parameters are missing.
        '401':
          description: Request is not authorized. Be sure you passed valid API credentials with your request.
        '403':
          description: The current user does not have permission to view this alert. Typically, this means the current user's ID does not match the user_id param in the URL.
        '404':
          description: Either there is no alert with this ID, or the alert having this ID was never intended for the user identified by user_id.

  /member-api/v3/checksums:
    get:
      summary: Returns a list of checksums. Results are automatically limited to checksums for files that belong the current user's institution.
      parameters:
        - name: page
          in: query
          description: The page of results to fetch
          required: false
          schema:
            type: integer
            default: 1
            format: int32      
        - name: per_page
          in: query
          description: The number of results to fetch per page.
          required: false
          schema:
            type: integer
            default: 20
            format: int32      
        - name: sort
          in: query
          description: Sort the results in the specified column and direction. The format for this param is column__direction, where column is the column name and direction is either "asc" or "desc".
          required: false
          schema:
            type: string            
            enum: ["algorithm__asc", "algorithm__desc", "datetime__asc", "datetime__desc", "digest__asc", "digest__desc", "generic_file_id__asc", "generic_file_id__desc", "generic_file_identfier__asc", "generic_file_identfier__desc", "intellectual_object_id__asc", "intellectual_object_id__desc", "state__asc", "state__desc"]
            default: datetime__desc
        - name: algorithm 
          in: query
          description: Show only checksums using the specified algorithm.
          required: false
          schema: 
            type: string
            enum: ["md5", "sha1", "sha256", "sha512"]
        - name: datetime__gteq
          in: query
          description: Return checksums calculated on or after the given timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - name: datetime__lteq
          in: query
          description: Return checksums calculated on or before the given timestamp.
          required: false
          schema:
            type: string
            format: date-time
        - name: digest
          in: query
          description: Return checksums with this exact digest.
          required: false
          schema:
            type: string
        - name: generic_file_id
          in: query
          description: Return checksums for the specified file.
          required: false
          schema:
            type: integer
            format: int64
        - name: generic_file_identifier
          in: query
          description: Return checksums for the specified file identifier.
          required: false
          schema:
            type: string
        - name: intellectual_object_id
          in: query
          description: Return checksums for files belonging to the specified intellectual object.
          required: false
          schema:
            type: integer
            format: int64
        - name: state
          in: query
          description: Return checksums for active, deleted, or all files. If unspecified, the server will return checksums for both active and deleted files.
          required: false
          schema:
            type: string
            enum: ["A", "D"]
            default: empty 
      responses:
        '200':
          description: A list of checksums for files belonging to the currently authenticated user's institution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecksumViewList'
        '401':
          description: Request is not authorized. Be sure you passed valid API credentials with your request.
        '403':
          description: The current user does not have permission to view the requested checksums.
  /member-api/v3/checksums/show/{id}:
    get:
      summary: Returns the checksum with the specified id.
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the checksum.
          schema:
            type: integer
            format: int64
            minimum: 1 
      responses:
        '200':
          description: An checksum object with the requested id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChecksumView'
        '400':
          description: Bad request. One or more required parameters are missing.
        '401':
          description: Request is not authorized. Be sure you passed valid API credentials with your request.
        '403':
          description: The current user does not have permission to view this checksum.
        '404':
          description: There is no checksum with this ID.
